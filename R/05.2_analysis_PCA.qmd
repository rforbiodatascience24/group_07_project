---
title: "Principle Component Analysis"
output: html
output-dir: results
execute:
  echo: true
---

```{r}
#| output: false

library("tidyverse")
library("broom")
```

```{r}
#| output: false

# Set path for processed data directory
processed_data_dir <- file.path("..","data")

# Load the dataset
data <- read_tsv(file = file.path(processed_data_dir,
                                         "03_dat_joined.tsv"))
```

```{r}
#| output: false

# Select numeric columns (gene expression)
pca_data <- data |>
  mutate(log_age = log2(age + 1.1),
         sex_num = case_when(sex == "M" ~ 1,
                             TRUE ~ 0),
         species_num = case_when(species == "Human" ~ 0,
                                 species == "Chimpanzee" ~ 1,
                                 TRUE ~ 2)) |>
  dplyr::select(where(is.numeric))

# Scale gene expression (variance = 1
pca_data_scaled <- pca_data |>
  scale()

# Perform PCA on scaled gene expression data
pca_results <- pca_data_scaled |>
  prcomp(scale. = FALSE)
```

```{r}
#| output: false

pca_proj_df <- pca_results |> 
  pluck("x") |> 
  as_tibble() |> 
  mutate(species = data |>
           pull(species),
         age = data |>
           pull(age),
         sex = data |>
           pull(sex),
         log_age = pca_data |>
           pull(log_age),
         species_num = pca_data |>
           pull(species_num),
         sex_num = pca_data |>
           pull(sex_num))

pca_proj_long_df <- pca_proj_df |>
  pivot_longer(
    cols = starts_with("PC"),
    names_to = "PC",
    values_to = "Score")


pca_var_df <- pca_results |> 
  pluck("sdev") |> 
  tibble(sdev = _ ) |>
  mutate(
    PC = paste0("PC",
                row_number()),
    variance_explained = (sdev^2 / sum(sdev^2)) * 100,
    cumulative_variance = cumsum(variance_explained)) |> 
  dplyr::select(PC,
         variance_explained,
         cumulative_variance)
  

pca_results_df <- pca_var_df |> 
  left_join(pca_proj_long_df,
            by = "PC")
```

```{r}
# Plot PCA results
pca_proj_df |> 
  ggplot(aes(x = PC1,
             y = PC2,
             color = species,
             size = age,
             shape = sex)) +
  geom_point(alpha = 0.5) +
  labs(title = "Principle component analysis", 
       x = "PC1", 
       y = "PC2") +
  theme_minimal()

```

```{r}
pca_var_df |> 
  mutate(PC = factor(PC,
                     levels = paste0("PC",
                                     seq_len(nrow(pca_var_df))))) |>
  
  ggplot(aes(x = PC,
             y = variance_explained)) +
  geom_bar(stat = "identity") +
  geom_line(aes(y = cumulative_variance, group = 1)) +
  geom_point(aes(y = cumulative_variance)) +
  geom_hline(yintercept = 95,
             linetype = "dashed",
             color = "darkgreen",
             size = .5) +
  geom_hline(yintercept = 90,
             linetype = "dashed",
             color = "lightgreen",
             size = .55) +
  labs(
    x = "Principal Component",
    y = "Variance Explained (%)",
    title = "Variance Explained by Principal Components") +
  theme_minimal() +
  theme(
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    panel.grid.major.y = element_line(color = "gray80"),
    axis.text.x = element_blank())
```

```{r}
#| output: false

pca_results_filtered <- pca_results_df |>
  filter(cumulative_variance <= 95)
```

```{r}
# put in functions script

calculate_var_explained <- function(data_frame,
                                    principal_component,
                                    factors) {
  
      # Input:
      # data_frame: PCA results and metadata
      # principal_component: PC to analyze (e.g., "PC1")
      # factors: Column names for factors (e.g., c("age", "species"))
    
  full_formula <- as.formula(paste(principal_component,
                                   "~",
                                   paste(factors,
                                         collapse = " + ")))
    
  # Fit the model and extract R-squared
  total_r2 <- data_frame |>
    lm(formula = full_formula,
       data = _) |>
    glance() |>
    pull(r.squared)
    
  # R-squared contributions for each factor
  var_explained_df <- factors |>
    map_df(~ { reduced_formula <- as.formula(paste(principal_component,
                                          "~",
                                          paste(setdiff(factors,
                                          .x),
                                          collapse = " + ")))
    
    # Fit reduced model and extract R-squared
    reduced_r2 <- data_frame |>
        lm(formula = reduced_formula,
           data = _) |>
        glance() |>
        pull(r.squared)
    
    # Variance explained
    tibble(Factor = .x,
           Var_Explained = total_r2 - reduced_r2,
           Total_R2 = total_r2,
           Reduced_R2 = reduced_r2)})
  
  return(var_explained_df)}

```

```{r}
#| output: false
var_explained_pc <- pca_proj_df |>
  pivot_longer(
    cols = starts_with("PC"),
    names_to = "principal_component",
    values_to = "pc_value") |>
  group_by(principal_component) |>
  nest() |>
  mutate(
    var_explained = map(
      .x = data,
      .f = ~ calculate_var_explained(
        data_frame = .x,
        principal_component = "pc_value",
        factors= c("log_age", "species_num", "sex_num")))) |>
  unnest(cols = c(var_explained)) |>
  dplyr::select(-data)

```

```{r}
#| output: false

# Make into function

var_explained_human <- pca_results_filtered |>
  filter(species == "Human") |>
  group_by(PC) |>
  nest() |>
  mutate(
    var_explained = map(
      .x = data,
      .f = ~ calculate_var_explained(
        data_frame = .x,
        principal_component = "Score",
        factors= c("log_age", "sex_num")))) |>
  unnest(cols = c(var_explained)) |>
  dplyr::select(-data)

var_explained_chimp <- pca_results_filtered |>
  filter(species == "Chimpanzee") |>
  group_by(PC) |>
  nest() |>
  mutate(
    var_explained = map(
      .x = data,
      .f = ~ calculate_var_explained(
        data_frame = .x,
        principal_component = "Score",
        factors= c("log_age", "sex_num")))) |>
  unnest(cols = c(var_explained)) |>
  dplyr::select(-data)

var_explained_macaque <- pca_results_filtered |>
  filter(species == "Macaque") |>
  group_by(PC) |>
  nest() |>
  mutate(
    var_explained = map(
      .x = data,
      .f = ~ calculate_var_explained(
        data_frame = .x,
        principal_component = "Score",
        factors= c("log_age", "sex_num")))) |>
  unnest(cols = c(var_explained)) |>
  dplyr::select(-data)
```

```{r}
# put in functions script

calculate_var_explained_prop <- function(data_frame) {
  data_frame |>
    group_by(Factor) |>
    summarize(Mean_PVE = mean(Var_Explained / Total_R2)) |>
    ungroup()}
```

```{r}
#| output: false

pve_human <- var_explained_human |>
  calculate_var_explained_prop() |>
  mutate(Species = "Human")

pve_chimp <- var_explained_chimp |>
  calculate_var_explained_prop() |>
  mutate(Species = "Chimpanzee")

pve_macaque <- var_explained_macaque |>
  calculate_var_explained_prop() |>
  mutate(Species = "Macaque")

pve_summary <- bind_rows(pve_human,
                         pve_chimp,
                         pve_macaque)
```

```{r}

pve_summary |>
  ggplot(aes(x = Species,
             y = Mean_PVE,
             fill = Factor)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(
    x = "Species",
    y = "Proportion of Variance Explained (%)",
    title = "Proportion of Variance Explained Across Species"
  ) +
  theme_minimal() +
  theme(
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    panel.grid.major.y = element_line(color = "gray80"))

```

```{r}
#| output: false

pca_results_df |>
  write_tsv(file = file.path(processed_data_dir,
                             "05.1.1_dat_pca.tsv"))

pve_summary |>
  write_tsv(file = file.path(processed_data_dir,
                             "05.1.2_dat_pve.tsv"))
```
